basePath: /
definitions:
  controller.HttpResult:
    properties:
      code:
        $ref: '#/definitions/controller.MessageCode'
      data: {}
      message:
        type: string
    type: object
  controller.MessageCode:
    enum:
    - 0
    - 1
    - 2
    - 101
    type: integer
    x-enum-varnames:
    - SUCCESS
    - FAILED
    - PARAM_ERROR
    - LOGIN_FAILED
  controller.ResetPassForm:
    properties:
      newpass:
        type: string
      oldpass:
        type: string
      userid:
        type: integer
    required:
    - newpass
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Folder:
    properties:
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      libraryID:
        type: integer
      name:
        type: string
      parentID:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Library:
    properties:
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      owner:
        $ref: '#/definitions/model.User'
      rootFolder:
        $ref: '#/definitions/model.Folder'
      updatedAt:
        type: string
    type: object
  model.LibraryRole:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Read
    - Write
  model.ShareLibrary:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      library:
        $ref: '#/definitions/model.Library'
      libraryId:
        type: integer
      role:
        $ref: '#/definitions/model.LibraryRole'
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  model.User:
    properties:
      admin:
        type: boolean
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      librarys:
        items:
          $ref: '#/definitions/model.Library'
        type: array
      password:
        type: string
      shareLibrarys:
        items:
          $ref: '#/definitions/model.ShareLibrary'
        type: array
      updatedAt:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:5678
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Myfile Swagger API
  version: "1.0"
paths:
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - in: formData
        name: password
        required: true
        type: string
      - in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息
          schema:
            $ref: '#/definitions/controller.HttpResult'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller.HttpResult'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/controller.HttpResult'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/controller.HttpResult'
      summary: 用户登录
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: 用户注册
      tags:
      - User
  /user/resetpass:
    post:
      consumes:
      - application/json
      description: 重置密码
      parameters:
      - description: 用户信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.ResetPassForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.HttpResult'
      summary: 重置密码
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
